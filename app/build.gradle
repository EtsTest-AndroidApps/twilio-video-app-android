apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        applicationId "com.twilio.video.app"

        minSdkVersion 16
        targetSdkVersion 25

        versionName generateVersionName()
        versionCode generateVersionCode()

        vectorDrawables.useSupportLibrary = true

        jackOptions {
            enabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    /**
     * Use the debug keystore to sign all variants of the test app
     * since this is only used internally.
     */
    signingConfigs {
        release {
            storeFile file(keystore)
            storePassword keystorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
        debug {
            storeFile file('video-android-app.keystore')
            storePassword 'android'
            keyAlias 'debug'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles.add(file('android-proguard-rules.pro'))
            proguardFiles.add(file("${project(':library').projectDir}/proguard-rules.pro"))
            proguardFiles.add(file("proguard-rules.pro"))
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            ndk {
                debuggable true
            }
            signingConfig signingConfigs.debug
        }
    }

    productFlavors {
        internal {
            applicationId "com.twilio.video.app.internal"
            buildConfigField 'String', 'TOPOLOGY_DEFAULT', '"P2P"'
            buildConfigField 'String', 'ENVIRONMENT_DEFAULT', '"prod"'
        }

        production {
            buildConfigField 'String', 'TOPOLOGY_DEFAULT', '"SFU"'
            buildConfigField 'String', 'ENVIRONMENT_DEFAULT', '"prod"'
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name

        // Ignore production debug builds for now
        if (names.contains("production") && variant.buildType.name == "debug") {
            setIgnore(true)
        }
    }
}

dependencies {
    compile project(':library')
    compile project(':env')
    compile project(':simplersignaling')
    compile 'net.hockeyapp.android:HockeySDK:3.5.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:preference-v14:25.1.0'
    compile 'com.jakewharton.timber:timber:4.1.0'
    compile 'com.appyvet:materialrangebar:1.3'
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'com.google.guava:guava:19.0'
    compile 'com.twilio:accessmanager-android:0.1.0'
    compile 'com.android.support:support-v4:25.1.0'
    //TODO: not sure if this is required
    compile 'com.google.firebase:firebase-core:10.0.1'
    compile 'com.google.firebase:firebase-auth:10.0.1'
    compile 'com.google.android.gms:play-services-auth:10.0.1'

    compile "io.reactivex.rxjava2:rxjava:2.0.6"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.1.0'

    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}

apply plugin: 'com.google.gms.google-services'
