apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "ACCOUNT_SID", "\"${getAccountSid()}\""
        buildConfigField "String", "AUTH_TOKEN", "\"${getAuthToken()}\""

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}

def getAccountSid() {
    // Attempt to get it from the environment variable
    def accountSid = System.getenv("ACCOUNT_SID");

    if (accountSid == null) {
        println "Could not locate ACCOUNT_SID environment variable. Trying local.properties"
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            accountSid = properties.getProperty('ACCOUNT_SID')
        }
    }

    if (accountSid == null) {
        println "Could not locate ACCOUNT_SID in local.properties."
        accountSid = ""
    }

    println "AccountSid: " + accountSid
    return accountSid;
}

def getAuthToken() {
    // Attempt to get it from the environment variable
    def authToken = System.getenv("AUTH_TOKEN");

    if (authToken == null) {
        println "Could not locate AUTH_TOKEN environment variable. Trying local.properties"
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            authToken = properties.getProperty('AUTH_TOKEN')
        }
    }

    if (authToken == null) {
        println "Could not locate AUTH_TOKEN in local.properties."
        authToken = ""
    }

    println "AuthToken: " + authToken
    return authToken;
}
