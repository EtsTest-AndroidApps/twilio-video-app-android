apply plugin: 'com.android.application'

def videoAndroidSdkDep = (project.hasProperty('apkScaleVideoAndroidVersion') ?
        "com.twilio:video-android:${apkScaleVideoAndroidVersion}" :
        project(':library'))

println("Video Android SDK Dep -> ${videoAndroidSdkDep}")

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion "${versions.buildTools}"

    lintOptions {
        warningsAsErrors true
    }

    defaultConfig {
        applicationId "com.twilio.app.apkscale"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Specify that we want to split up the APK based on ABI
    splits {
        abi {
            // Enable ABI split
            enable true

            // Clear list of ABIs
            reset()

            // Specify each architecture currently supported by the Video SDK
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            // Specify that we do not want an additional universal SDK
            universalApk true
        }
    }

    flavorDimensions "appType"

    productFlavors {
        withoutVideoSdk {
            dimension "appType"
            applicationId "com.twilio.video.app.withoutvideosdk"
        }

        withVideoSdk {
            dimension "appType"
            applicationId "com.twilio.video.app.withvideosdk"
        }
    }
}

dependencies {
    // Include Video SDK in dedicated flavor
    withVideoSdkImplementation videoAndroidSdkDep

    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "com.android.support.test:runner:${versions.testSupportLibrary}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
}
