/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_twilio_conversations_impl_ConversationsClientImpl */

#include "com_twilio_conversations_impl_ConversationsClientImpl.h"

#include "TSCoreSDK.h"
#include "TSCoreSDKTypes.h"
#include "TSCEndpoint.h"
#include "TSCSession.h"
#include "TSCLogger.h"

using namespace twiliosdk;
/*
 * Class:     com_twilio_conversations_impl_ConversationsClientImpl
 * Method:    listen
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_twilio_conversations_impl_ConversationsClientImpl_listen
        (JNIEnv *env, jobject obj, jlong nativeEndpoint) {
    TS_CORE_LOG_MODULE(kTSCoreLogModuleSignalSDK, kTSCoreLogLevelDebug, "listen");
    reinterpret_cast<TSCEndpointPtr *>(nativeEndpoint)->get()->registerEndpoint(true, true);
}

/*
 * Class:     com_twilio_conversations_impl_ConversationsClientImpl
 * Method:    unlisten
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_twilio_conversations_impl_ConversationsClientImpl_unlisten
        (JNIEnv *env, jobject obj, jlong nativeEndpoint) {
    TS_CORE_LOG_MODULE(kTSCoreLogModuleSignalSDK, kTSCoreLogLevelDebug, "unlisten");
    reinterpret_cast<TSCEndpointPtr *>(nativeEndpoint)->get()->unregisterEndpoint();
}


/*
 * Class:     com_twilio_conversations_impl_ConversationsClientImpl
 * Method:    reject
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_twilio_conversations_impl_ConversationsClientImpl_reject
        (JNIEnv *env, jobject obj, jlong nativeEndpoint, jlong nativeSession) {
    TS_CORE_LOG_MODULE(kTSCoreLogModuleSignalSDK, kTSCoreLogLevelDebug, "reject");
    TSCSessionPtr *session = reinterpret_cast<TSCSessionPtr *>(nativeSession);
    reinterpret_cast<TSCEndpointPtr *>(nativeEndpoint)->get()->reject(*session);
}

/*
 * Class:     com_twilio_conversations_impl_ConversationsClientImpl
 * Method:    freeNativeHandle
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_twilio_conversations_impl_ConversationsClientImpl_freeNativeHandle
        (JNIEnv *env, jobject obj, jlong nativeEndpoint) {
    TS_CORE_LOG_MODULE(kTSCoreLogModuleSignalSDK, kTSCoreLogLevelDebug, "freeNativeHandle");
    TSCEndpointPtr *endpoint = reinterpret_cast<TSCEndpointPtr *>(nativeEndpoint);
    if (endpoint != nullptr) {
        TSCSDK::instance()->destroyEndpoint(*endpoint);
        endpoint->reset();
        delete endpoint;
    }
}
